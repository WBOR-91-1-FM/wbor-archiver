# Nginx Configuration File
# Optimized for performance, security, and maintainability.

# Define the number of worker processes.
# 'auto' sets it to the number of available CPU cores.
worker_processes auto;

# Set the maximum number of open file descriptors for worker processes.
# This should be at least (worker_connections * worker_processes).
worker_rlimit_nofile 65535;

events {
    # Maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 1024;

    # Use the epoll event method for Linux systems for better performance.
    use epoll;
}

http {
    # Include MIME types for proper content-type handling.
    include mime.types;

    # Set client request size limit to 10MB
    client_max_body_size 10M;

    # Enable efficient file transmission.
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Enable gzip compression to reduce response size.
    gzip on;
    gzip_disable "msie6";

    # Set gzip compression level (1-9).
    gzip_comp_level 5;

    # Specify the MIME types to compress.
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Keep-alive settings to manage persistent connections.
    keepalive_timeout 65;
    keepalive_requests 100;

    # Limit the number of simultaneous connections per IP to prevent abuse.
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 100;

    # Define logging for access and errors.
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;

    server {
        # Listen on port 80 for HTTP requests.
        listen 80 default_server;
        listen [::]:80 default_server;

        # Server name for handling requests. Replace 'localhost' with your domain.
        server_name localhost;

        # Root directory for serving static files.
        root /usr/share/nginx/html;

        # Default index files.
        index index.html index.htm;

        # Handle requests for favicon.ico to reduce unnecessary logging.
        location = /favicon.ico {
            root /etc/nginx;
            access_log off;
            log_not_found off;
        }

        # # Main location block to proxy requests to the frontend application.
        # location / {
        #     proxy_pass http://wbor-archiver-frontend:3000;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #     # Bypass proxy cache for upgrade requests (e.g., WebSocket).
        #     proxy_cache_bypass $http_upgrade;

        #     # Increase proxy timeouts to handle long-running requests.
        #     proxy_connect_timeout 60s;
        #     proxy_send_timeout 60s;
        #     proxy_read_timeout 60s;

        #     # Buffer settings to optimize performance.
        #     proxy_buffers 16 64k;
        #     proxy_buffer_size 128k;
        # }

        # # Hot Module Replacement WebSocket support
        # location /ws {
        #     proxy_pass http://wbor-archiver-frontend:3000/ws;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;

        #     # Bypass proxy cache for WebSocket connections.
        #     proxy_cache_bypass $http_upgrade;

        #     # Increase proxy timeouts for WebSocket connections.
        #     proxy_connect_timeout 60s;
        #     proxy_send_timeout 3600s;
        #     proxy_read_timeout 3600s;

        #     # Buffer settings tailored for WebSocket traffic.
        #     proxy_buffers 8 32k;
        #     proxy_buffer_size 64k;
        # }

        # Proxy API requests to the backend server.
        location /api/ {
            proxy_pass http://wbor-archiver-backend:8000;
            proxy_http_version 1.1;

            # Preserve original headers.
            proxy_set_header Origin $http_origin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable CORS for API responses.
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            add_header Access-Control-Allow-Headers Content-Type,Authorization;

            # Handle preflight OPTIONS requests.
            if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
                add_header Access-Control-Allow-Headers Content-Type,Authorization;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            # Increase proxy timeouts for API requests.
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings for API traffic.
            proxy_buffers 16 64k;
            proxy_buffer_size 128k;
        }

        # Swagger UI for API documentation.
        location /docs/ {
            proxy_pass http://wbor-archiver-backend:8000/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location = /openapi.json {
            proxy_pass http://wbor-archiver-backend:8000/openapi.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # pgAdmin
        location = /pgadmin {
            return 301 /pga/;
        }

        # Proxy pgAdmin requests to the pgAdmin service.
        location ^~ /pga/ {
            proxy_pass http://pgadmin:80/;

            # Preserve original headers.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Script-Name /pga;

            # Increase proxy timeouts for pgAdmin.
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings for pgAdmin.
            proxy_buffers 16 64k;
            proxy_buffer_size 128k;

            # Optional security headers.
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-XSS-Protection "1; mode=block";
        }

        # Optional: Deny access to hidden files (starting with a dot).
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
