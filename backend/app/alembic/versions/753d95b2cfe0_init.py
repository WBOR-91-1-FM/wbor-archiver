"""Init

Revision ID: 753d95b2cfe0
Revises:
Create Date: 2025-04-08 00:09:06.932356

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "753d95b2cfe0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("segments")
    op.drop_table("download_logs")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "download_logs",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("segment_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "downloaded_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("ip_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("user_agent", sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["segment_id"], ["segments.id"], name="download_logs_segment_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="download_logs_pkey"),
    )
    op.create_table(
        "segments",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("filename", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("archived_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "start_ts",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "end_ts",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "is_published",
            sa.BOOLEAN(),
            server_default=sa.text("true"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("sha256_hash", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("bit_rate", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sample_rate", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("icy_br", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("icy_genre", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("icy_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("icy_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("encoder", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="segments_pkey"),
        sa.UniqueConstraint("filename", name="segments_filename_key"),
    )
    # ### end Alembic commands ###
